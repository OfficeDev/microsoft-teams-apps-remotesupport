<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BotCommandExpertList" xml:space="preserve">
    <value>Expert list</value>
    <comment>Bot command expert list</comment>
  </data>
  <data name="BotCommandExpertListDescription" xml:space="preserve">
    <value>List of on call experts</value>
    <comment>Bot command expert list description</comment>
  </data>
  <data name="BotCommandNewRequest" xml:space="preserve">
    <value>New request</value>
    <comment>Bot command new request</comment>
  </data>
  <data name="BotCommandNewRequestDescription" xml:space="preserve">
    <value>Make a request to the on-call team</value>
    <comment>Bot command new request description</comment>
  </data>
  <data name="btnAddComponent" xml:space="preserve">
    <value>Add component</value>
  </data>
  <data name="btnBuildForm" xml:space="preserve">
    <value>Build your form</value>
  </data>
  <data name="btnLogout" xml:space="preserve">
    <value>Log out</value>
  </data>
  <data name="checkBox" xml:space="preserve">
    <value>Check Box</value>
  </data>
  <data name="checkBoxOptions" xml:space="preserve">
    <value>Check box choice options</value>
  </data>
  <data name="componentDropdown" xml:space="preserve">
    <value>Select your component</value>
  </data>
  <data name="ComposeExtensionCommandAssigned" xml:space="preserve">
    <value>Assigned</value>
    <comment>Compose extension command assigned</comment>
  </data>
  <data name="ComposeExtensionCommandAssignedDescription" xml:space="preserve">
    <value>Search requests assigned to an expert</value>
    <comment>Compose extension command assigned description</comment>
  </data>
  <data name="ComposeExtensionCommandUnassigned" xml:space="preserve">
    <value>Unassigned</value>
    <comment>Compose extension command unassigned</comment>
  </data>
  <data name="ComposeExtensionCommandUnassignedDescription" xml:space="preserve">
    <value>Search unassigned requests not yet assigned to an expert</value>
    <comment>Compose extension command unassigned description</comment>
  </data>
  <data name="ComposeExtensionsCommandActive" xml:space="preserve">
    <value>Active</value>
    <comment>Compose extensions command active</comment>
  </data>
  <data name="ComposeExtensionsCommandActiveDescription" xml:space="preserve">
    <value>Search active requests</value>
    <comment>Compose extensions command active description</comment>
  </data>
  <data name="ComposeExtensionsCommandClosed" xml:space="preserve">
    <value>Closed</value>
    <comment>Compose extensions command closed</comment>
  </data>
  <data name="ComposeExtensionsCommandClosedDescription" xml:space="preserve">
    <value>Search closed requests</value>
    <comment>Compose extensions command closed description</comment>
  </data>
  <data name="ComposeExtensionsCommandParameterDescription" xml:space="preserve">
    <value>Search requests</value>
    <comment>Compose extensions command parameter search description</comment>
  </data>
  <data name="ComposeExtensionsCommandParameterSearch" xml:space="preserve">
    <value>Search</value>
    <comment>Compose extensions command parameter search</comment>
  </data>
  <data name="ComposeExtensionsCommandUrgent" xml:space="preserve">
    <value>Urgent</value>
    <comment>Compose extension command urgent</comment>
  </data>
  <data name="ComposeExtensionsCommandUrgentDescription" xml:space="preserve">
    <value>Search urgent requests</value>
    <comment>Compose extension command urgent description</comment>
  </data>
  <data name="descriptionPlaceholderText" xml:space="preserve">
    <value>Describe the problem</value>
  </data>
  <data name="descriptionText" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="displayName" xml:space="preserve">
    <value>Display name (max 50 characters)</value>
  </data>
  <data name="displayNamePlaceholder" xml:space="preserve">
    <value>Enter the name here</value>
  </data>
  <data name="dropDown" xml:space="preserve">
    <value>Dropdown</value>
  </data>
  <data name="dropdownOptions" xml:space="preserve">
    <value>Dropdown options</value>
  </data>
  <data name="duplicateItem" xml:space="preserve">
    <value>Item text cannot be duplicate</value>
  </data>
  <data name="emptyTeamLink" xml:space="preserve">
    <value>Team url cannot be empty.</value>
  </data>
  <data name="EndUserManifestFullDescription" xml:space="preserve">
    <value>Request remote support quickly. Search requests and escalate to on call experts via group chat for urgent requests.</value>
    <comment>End user manifest full description</comment>
  </data>
  <data name="EndUserManifestName" xml:space="preserve">
    <value>Remote Support</value>
    <comment>End user manifest name</comment>
  </data>
  <data name="EndUserManifestShortDescription" xml:space="preserve">
    <value>Helps request support and connect with experts quickly</value>
    <comment>End user manifest short description</comment>
  </data>
  <data name="genericError" xml:space="preserve">
    <value>Something went wrong!</value>
  </data>
  <data name="headerTitle" xml:space="preserve">
    <value>Build form</value>
  </data>
  <data name="inputDate" xml:space="preserve">
    <value>Input Date</value>
  </data>
  <data name="inputText" xml:space="preserve">
    <value>Input Text</value>
  </data>
  <data name="invalidTeamLink" xml:space="preserve">
    <value>Invalid team url.</value>
  </data>
  <data name="loading" xml:space="preserve">
    <value>Loading... Please wait</value>
  </data>
  <data name="mainHeader" xml:space="preserve">
    <value>Card configuration</value>
  </data>
  <data name="maxCheckBoxChoices" xml:space="preserve">
    <value>Cannot add more than 4 choices</value>
  </data>
  <data name="maxComponents" xml:space="preserve">
    <value>Maximum of only 4 components can be added in preview</value>
  </data>
  <data name="maxDropdownChoices" xml:space="preserve">
    <value>Cannot add more than 10 choices</value>
  </data>
  <data name="maxLengthDisplayName" xml:space="preserve">
    <value>Display name should not be more than 50 characters</value>
  </data>
  <data name="maxRadioChoices" xml:space="preserve">
    <value>Cannot add more than 3 choices</value>
  </data>
  <data name="minimumItems" xml:space="preserve">
    <value>Minimum 2 items expected</value>
  </data>
  <data name="nonEmptyItem" xml:space="preserve">
    <value>Item text cannot be empty</value>
  </data>
  <data name="normalSeverity" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="notAuthorized" xml:space="preserve">
    <value>You are not authorized to access the application</value>
  </data>
  <data name="notEmptyDisplayName" xml:space="preserve">
    <value>Display name should not be empty</value>
  </data>
  <data name="placeholder" xml:space="preserve">
    <value>Placeholder (max 50 characters)</value>
  </data>
  <data name="placeholderText" xml:space="preserve">
    <value>Enter the placeholder text here</value>
  </data>
  <data name="previewTitle" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="radioButton" xml:space="preserve">
    <value>Radio Button</value>
  </data>
  <data name="radioOptions" xml:space="preserve">
    <value>Radio button choice options</value>
  </data>
  <data name="SmeManifestFullDescription" xml:space="preserve">
    <value>Manage support request and set up on call experts in team. Search urgent, assigned and unassigned requests right from expert team.</value>
    <comment>SME manifest full description</comment>
  </data>
  <data name="SmeManifestName" xml:space="preserve">
    <value>Remote Support - Expert</value>
    <comment>SME manifest name</comment>
  </data>
  <data name="SmeManifestShortDescription" xml:space="preserve">
    <value>Expert team bot to handle user requests and set on call experts.</value>
    <comment>SME manifest short description</comment>
  </data>
  <data name="staticDropdown" xml:space="preserve">
    <value>Request type</value>
  </data>
  <data name="staticDropdownPlaceholder" xml:space="preserve">
    <value>Select request type</value>
  </data>
  <data name="successPublish" xml:space="preserve">
    <value>Data saved successfully</value>
  </data>
  <data name="teamLink" xml:space="preserve">
    <value>Team link</value>
  </data>
  <data name="titleText" xml:space="preserve">
    <value>What is it about?</value>
  </data>
  <data name="uniqueDisplayName" xml:space="preserve">
    <value>Display name should be unique</value>
  </data>
  <data name="urgentSeverity" xml:space="preserve">
    <value>Urgent</value>
  </data>
</root>